---

---

<div
  id="dialog"
  class="fixed inset-0 z-40 min-h-full overflow-y-auto overflow-x-hidden transition flex items-center"
>
  <!-- overlay -->
  <div
    aria-hidden="true"
    class="fixed inset-0 w-full h-full bg-black/50 cursor-pointer"
    id="overlay-dialog"
  >
  </div>

  <!-- Modal -->
  <div
    class="relative w-full cursor-pointer pointer-events-none transition my-auto p-4"
  >
    <div
      class="w-full max-w-lg py-2 bg-white cursor-default pointer-events-auto dark:bg-gray-800 relative rounded-xl mx-auto"
    >
      <button
        type="button"
        class="absolute top-2 right-2 rtl:right-auto rtl:left-2"
        id="close-btn"
      >
        <svg
          x-link-title="Close"
          class="h-4 w-4 hover:rotate-180 transition-all ease-in-out duration-500 cursor-pointer text-gray-400"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 20 20"
          fill="currentColor"
          aria-hidden="true"
        >
          <path
            fillR-rule="evenodd"
            d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
            clip-rule="evenodd"></path>
        </svg>
        <span class="sr-only"> Close </span>
      </button>

      <div class="space-y-2 p-2">
        <div class="p-2 space-y-2 text-center dark:text-white">
          <h2 class="text-xl font-bold tracking-tight" id="book-title">
            Book Title
          </h2>
          <p class="text-indigo-500" id="authors">Authors</p>
          <p class="text-yellow-500" id="genres">genres</p>
        </div>
      </div>

      <div class="space-y-2">
        <div aria-hidden="true" class="border-t border-gray-700 px-2"></div>

        <form novalidate>
          <div class="flex p-4 gap-4 items-center justify-center">
            <label for="page" class="text-gray-400 text-lg">
              PÃ¡gina actual
            </label>
            <input
              id="page"
              class="border px-3 shadow-md border-gray-700 placeholder:text-base focus:outline-none ease-in-out duration-300 rounded-lg max-w-3xs"
              type="number"
              placeholder="0"
              required
            />
          </div>
          <div aria-hidden="true" class="border-b border-gray-700 px-2"></div>
          <div class="px-6 py-2">
            <div class="grid gap-2 grid-cols-[repeat(auto-fit,minmax(0,1fr))]">
              <button
                type="submit"
                class="inline-flex items-center justify-center py-1 gap-1 font-medium rounded-lg border transition-colors outline-none focus:ring-offset-2 focus:ring-2 focus:ring-inset dark:focus:ring-offset-0 min-h-[2.25rem] px-4 text-sm text-gray-800 bg-white border-gray-300 hover:bg-gray-50 focus:ring-primary-600 focus:text-primary-600 focus:bg-primary-50 focus:border-primary-600 dark:bg-gray-800 dark:hover:bg-gray-700 dark:border-gray-600 dark:hover:border-gray-500 dark:text-gray-200 dark:focus:text-primary-400 dark:focus:border-primary-400 dark:focus:bg-gray-800"
              >
                Actualizar
              </button>

              <button
                type="button"
                class="inline-flex items-center justify-center py-1 gap-1 font-medium rounded-lg border transition-colors outline-none focus:ring-offset-2 focus:ring-2 focus:ring-inset dark:focus:ring-offset-0 min-h-[2.25rem] px-4 text-sm text-white shadow focus:ring-white border-transparent bg-red-500 hover:bg-red-400"
              >
                <span class="flex items-center gap-1"> Eliminar </span>
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  import { bookISBN, isOpen } from "@/store/bookDialog.store";
import { getBookByISBN } from "@/store/lectureList.store";

  const dialog = document.querySelector("#dialog") as HTMLDivElement;
  const title = document.querySelector("#book-title") as HTMLHeadingElement;
  const authors = document.querySelector("#authors") as HTMLParagraphElement;
  const genres = document.querySelector("#genres") as HTMLParagraphElement;

  const closeBtn = document.querySelector("#close-btn") as HTMLButtonElement;
  const overlay = document.querySelector("#overlay-dialog") as HTMLDivElement;

  const input = document.querySelector("input") as HTMLInputElement;

  // Listen to changes in the store, and show/hide the dialog accordingly
  isOpen.subscribe((open) => {
    if (open) {
      dialog.style.display = "block";
      const book = getBookByISBN(bookISBN.get());
      if (!book) return;
      title.textContent = book.title;
      authors.textContent = book.author_name.join(", ");
      genres.textContent = book.subject.join(", ");
      input.value = `${book.page}`;
      input.dataset.id = book.isbn.join(",");
    } else {
      dialog.style.display = "none";
    }
  });

  //close dialog
  const closeModal = () => {
    isOpen.set(false);
  };

  closeBtn.addEventListener("click", closeModal);
  overlay.addEventListener("click", closeModal);
</script>

<script>
import { bookISBN, isOpen } from "@/store/bookDialog.store";
import { updateBook, books, removeBook, getBookByISBN } from "@/store/lectureList.store";


  const form = document.querySelector("form") as HTMLFormElement;
  const input = document.querySelector("input") as HTMLInputElement;
  const removeBtn = document.querySelector("button:last-child") as HTMLButtonElement;
  const gridLectureList = document.querySelector(".grid-lecture-list") as HTMLDivElement;
  const gridAvailable = document.querySelector(".grid-available") as HTMLDivElement;
  
  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const book = getBookByISBN(bookISBN.get());
    if (!book) return;
    book.page = +input.value;
    
    // update book in lecture list store and save it to local storage
    const updatedBooks = updateBook(book);
    localStorage.setItem("lectureList", JSON.stringify(updatedBooks));

    // close modal
    isOpen.set(false);
  });

  removeBtn.addEventListener("click", () => {
    const book = getBookByISBN(bookISBN.get());
    if (!book) return;
    removeBook(book);

    const booksUpdated = books.get();
    localStorage.setItem("books", JSON.stringify(booksUpdated));
  });
</script>
