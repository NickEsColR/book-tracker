---
import type { Book } from "@/types";
interface Props {
  book: Book;
  isDraggable?: boolean;
  showDetails?: boolean;
}

const { book, isDraggable = false, showDetails = false } = Astro.props;

const {
  author_name: authors,
  subject: genres,
  cover_i: image,
  isbn,
  number_of_pages_median: pagesNumber,
  title,
  first_publish_year: year,
} = book;
---

<div
  class:list={[
    "flex relative w-full aspect-[9/16]",
    {
      openDialog: !showDetails,
    },
  ]}
  id={isbn.join(",")}
  data-book={JSON.stringify(book)}
  {...isDraggable && {
    draggable: true,
    ondragstart: "drag(event)",
    ondragend: "endDrag(event)",
  }}
>
  <img
    alt={title}
    class="absolute inset-0 w-full h-full object-fill object-center"
    src={image}
  />
  {
    showDetails && (
      <div class="flex flex-col px-4 py-5 relative z-10 w-full border-4 border-gray-800 bg-gray-900 opacity-0 hover:opacity-100 details">
        <h4 class="text-lg font-medium text-white mb-3">{title}</h4>
        <span class="tracking-widest text-sm font-medium text-indigo-400 mb-1">
          <strong>Autor{authors.length > 1 ? "es" : ""}:</strong>
          {authors.join(", ")}
        </span>
        <span class="tracking-widest text-sm font-medium text-indigo-400 mb-1">
          <strong>Genero{genres.length > 1 ? "s" : ""}:</strong>
          {genres.join(", ")}
        </span>
        <span class="tracking-widest text-sm font-medium text-amber-200 mb-1">
          Publicado en {year}
        </span>
        <p class="leading-relaxed">{pagesNumber} p√°ginas</p>
      </div>
    )
  }
</div>

<script is:inline>
  function drag(e) {
    const card = e.target;
    card.classList.add("dragging");
    e.dataTransfer.setData("book", card.id);
  }
  function endDrag(e) {
    const card = e.target;
    card.classList.remove("dragging");
  }
</script>

<script>
  import { isOpen, bookDetails } from "@/store/bookDialog.store";
import type { Book } from "@/types";

  const cards = document.querySelectorAll(".openDialog") as NodeListOf<HTMLDivElement>;

  // Set the store to true when the button is clicked
  function openDialog(book: Book) {
    bookDetails.set(book);
    isOpen.set(true);
  }

  // Add an event listener to the button
  cards.forEach((card) => {
    const book = JSON.parse(card.getAttribute("data-book") ?? "{}") as Book;
    card.addEventListener("click", (e) => openDialog(book));
  });
</script>

<style>
  .dragging .details {
    opacity: 0;
  }

  .openDialog {
    cursor: pointer;
  }
</style>
