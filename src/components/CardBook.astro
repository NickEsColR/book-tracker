---
import type { Book } from "@/types/OpenLibraryTypes";

interface Props {
  book: Book;
  canOpenDialog?: boolean;
}

const { book, canOpenDialog } = Astro.props;

// Validations and default values
const displayTitle = book.title || "TÃ­tulo no disponible";
const displayAuthors = (book.author_name && book.author_name.length > 0) 
  ? book.author_name 
  : ["Autor desconocido"];

const imageUrl = book.cover_i 
  ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`
  : null; 
---

<div
  class:list={[
    "flex relative w-full aspect-[9/16] border border-gray-700 rounded overflow-hidden", // Added group for hover effects if needed later
    { "openDialog": canOpenDialog },
  ]}
>
  {/* Bookmark Icon */}
  <div class="absolute top-0 right-0 z-10 -mt-1">
    <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-neutral-500 drop-shadow-md opacity-50 hover:opacity-100 transition-opacity duration-300 cursor-pointer">
      <path d="m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z"></path>
    </svg>
  </div>

  {imageUrl ? (
    <img
      alt={displayTitle}
      class="absolute inset-0 w-full h-full object-fill object-center"
      src={imageUrl}
    />
  ) : (
    <div class="flex flex-col items-center justify-center h-full w-full p-4 text-center bg-gray-800 bg-opacity-40">
      <h3 class="text-sm font-bold text-white leading-tight">{displayTitle}</h3>
      <div class="mt-1 text-xs text-gray-300">
        {displayAuthors.map((author) => (
          <p>{author}</p>
        ))}
      </div>
    </div>
  )}
</div>
