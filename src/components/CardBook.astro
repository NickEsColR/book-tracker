---
import type { Book } from "@/types";
interface Props {
  book: Book;
  canOpenDialog?: boolean;
}

const { book, canOpenDialog } = Astro.props;

const {
  author_name: authors,
  subject: genres,
  cover_i: image,
  isbn,
  number_of_pages_median: pagesNumber,
  title,
  first_publish_year: year,
} = book;
---

<div
  class:list={[
    "flex relative w-full aspect-[9/16]",
    { openDialog: canOpenDialog },
  ]}
  id={`${isbn.join(", ")}`}
  data-book={JSON.stringify(book)}
>
  <img
    alt={title}
    class="absolute inset-0 w-full h-full object-fill object-center"
    src={image}
  />
  <div class="details">
    <h4 class="text-xl font-medium text-indigo-400 mb-3">{title}</h4>
    <div>
      <p class="tracking-widest text-xs text-white mb-1">
        <strong>Autor{authors.length > 1 ? "es" : ""}:</strong>
        {authors.join(", ")}
      </p>
      <p class="tracking-widest text-xs text-white mb-1">
        <strong>Genero{genres.length > 1 ? "s" : ""}:</strong>
        {genres.join(", ")}
      </p>
      <p class="tracking-widest text-xs text-white mb-1">
        <strong>Año:</strong>
        {year}
      </p>
      <p class="leading-relaxed">{pagesNumber} páginas</p>
    </div>
    <button
      class="bg-amber-500 text-white px-3 py-2 rounded-md cursor-pointer hover:bg-amber-600"
    >
      Agregar a mi lista
    </button>
  </div>
</div>

<script>
  import { openDialog } from "@/store/bookDialog.store";

  const cards = document.querySelectorAll(
    ".openDialog"
  ) as NodeListOf<HTMLDivElement>;

  // Add an event listener to the button
  cards.forEach((card) => {
    card.addEventListener("click", (e) => openDialog(card.id));
  });
</script>

<script>
  import type { LectureBook } from "@/types";
  import { addBook, books } from "@/store/lectureList.store";
  import { openDialog } from "@/store/bookDialog.store";

  const cards = document.querySelectorAll(
    ".openDialog"
  ) as NodeListOf<HTMLDivElement>;

  const addBtns = document.querySelectorAll(
    ".details button"
  ) as NodeListOf<HTMLButtonElement>;

  const lectureList = document.querySelector(
    ".grid-lecture-list"
  ) as HTMLDivElement;

  const lectureListCount = document.querySelector("#number-lecture-list") as HTMLSpanElement;
  const availableCount = document.querySelector("#number-available") as HTMLSpanElement;

  // Enable button to add book to the lecture list
  addBtns.forEach((btn) =>
    btn.addEventListener("click", (e: Event) => {
      e.stopPropagation();
      const card = btn.parentElement?.parentElement as HTMLDivElement;
      const book = JSON.parse(
        card.getAttribute("data-book") ?? "{}"
      ) as LectureBook;
      book.page = 0;

      // save to store
      addBook(book);

      // move to the lecture list
      card.remove();
      card.classList.add("openDialog");
      lectureList.appendChild(card);

      // add function to open the dialog
      card.addEventListener("click", (e) => openDialog(card.id));

      // persist the list
      window.localStorage.setItem("lectureList", JSON.stringify(books.get()));

      // update the count
      lectureListCount.textContent = `${+(lectureListCount.textContent ?? 0) + 1}`;
      availableCount.textContent = `${+(availableCount.textContent ?? 0) - 1}`;
    })
  );

  // Enable card to open the dialog
  cards.forEach((card) => {
    card.addEventListener("click", (e) => openDialog(card.id));
  });
</script>

<style>
  .openDialog {
    cursor: pointer;
  }
</style>
